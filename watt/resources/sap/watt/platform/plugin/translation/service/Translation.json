{
	"name" : "sap.watt.common.plugin.translation.service.Translation",
	"description" : "The Translation service interface",
		
	"configurationProperties" : {
		"styles" : {
			"type" : [{
				"uri" : "string",
				"type" : "string"
			}],
			"multiple" : false
		}
	},
	
	"methods" : {
		"getDomains" : {
			"returns" : {
				"type": {
					"domains": {
						"type"			: "[object]",
						"description"	: "an array of all domains in format of [{name: '', id:''}]"
					}
				},
				"description": "an object including an array of all domains supported by term server"
			}
		},
		"getTextTypes" : {
			"returns" : {
				"type": {
					"texttypes": {
						"type"			: "[object]",
						"description"	: "an array of all text types in format of [{name: '', id:''}]"
					}
				},
				"description": "an object including an array of all text types supported by term server"
			}
		},
		"getCurrentDomain" : {
			"returns" 		: "string",
			"description" 	: "the currently used domain"
		},
		"setCurrentDomain" : {
			"params" : [
				{
					"name" 			: "domainID",
					"type" 			: "object",
					"description" 	: "the domain, must be one of the supported domains,  such as 'BC'"
				},
				{
					"name" 			: "oTargetDocument",
					"type" 			: "object",
					"description" 	: "the target document"
				}
			]
		},
		"getCurrentTextType" : {
			"description"	: "Gets currently used Text Type, which the term will be searched from.",
			"returns" : {
				"type" : "string",
				"description" : "The currently used text type"
			}
		},
		"setCurrentTextType" : {
			"description"	: "Sets Text Type to be used for searching the term",
			"params" : [{
				"name" 			: "sTextTypeID",
				"type" 			: "string",
				"description" 	: "the text type, must be one of the supported text types,  such as 'XFLD'"
			}]
		},
		"getTerms" : {
			"description"	: "Gets suggestions of terms for the particular word.",
			"params" : [{
				"name" 			: "sText",
				"type" 			: "string",
				"description" 	: "the text needs to find term suggestion for"
			},
			{
				"name" 		: "sDomainID",
				"type" 		: "string",
				"optional"	: true,
				"description" 	: "the domain to filter the terms. If missing, default domain will be used"
			},
			{
				"name" 		: "sTextTypeID",
				"type" 		: "string",
				"optional"	: true,
				"description" 	: "the text type to filter the terms. If missing, default text type will be used"
			}],
			"returns" : {
				"type": {
					"suggestions": {
						"type"			: "[object]",
						"description"	: "an array of all terms in format of [{id: 854788, value: 'xxx' , domainId: 'BC', domainName: 'Business', texttypeId: 'XFLD', texttypeName: 'Label',availableLanguages: 5} ] "
					}
				},
				"description": "and object including an array of all languages supported by term server"
			}
			
		},
		"getLanguages" : {
			"description": "Gets all languages supported by the Term/Translation Server",
			"returns" :  {
				"type": {
					"languages": {
						"type"			: "[object]",
						"description"	: "an array of all languages in format of [{id:'', name:''}]"
					}
				},
				"description": "and object including an array of all languages supported by term server"
			}
		},
		"getSourceLanguage" : {
			"description"	: "Get source language for translation.",
			"returns" : {
				"type" : "object",
				"description" : "the currently used (default) source language in format of {id:'', name:''}"
			}
		},
		"setSourceLanguage" : {
			"description": "Sets source language",
			"params" : [{
				"name" 			: "oLanguage",
				"type" 			: "object",
				"description"	: "the language to be used as default source language in format of {id:'', name:''}"
			}]
		},
		"getTargetLanguages" : {
			"description": "Gets target language for translation",
			"returns" : {
				"type" : "object",
				"description" : "an array of languages in format of [{id:'', name:''}]"
			}
		},
		"setTargetLanguages" : {
			"description": "Sets target languages",
			"params" : [{
				"name" : "oLanguages",
				"type" : "object",
				"description"	: "an array of languages in format of [{id:'', name:''}]"
			}]
		},
		"getTranslations" : {
			"description" 	: "Gets suggestions of translation for the particular term for specific languages.",
			"params" : [{
				"name" 		: "oKeyValues",
				"type" 		: "[object]",
				"description": "an array of object for key/value pairs in format of [{key:'', value:'', textType:'', extraInfo:''}] "		
				},
				{
				"name" 		: "sDomain",
				"type" 		: "string",
				"description": "domain to be used"		
				},
				{
				"name" 		: "oTargetLanguages",
				"type" 		: "[object]",
				"description": "an array of object for target languages in format of [{id:'', name:''}] "		
				},
				{
				"name" 		: "sBundleID",
				"type" 		: "string",
				"optional"	: true,
				"description": "the unique Id for the translation bundle"
				},
				{
				"name" 		: "bCanCancel",
				"type" 		: "boolean",
				"optional"	: true,
				"description": "display a dialog for user to cancel the web service call if true"
				}
			],
			"returns" : {
				"type" : "[object]",
				"description" : "the translated terms in format of [{textType:'', key:'', value:'', translations:[{language:'en',value:''}]}]"
			}
		},
		"showGetTermsUI" : {
			"description": "Shows a popup window with all the terms",
			"params" : [{
				"name" 		: "callback",
				"type" 		: "string",
				"description": "the call back function once the term was selected"
				},
				{
				"name" 		: "sText",
				"type" 		: "string",
				"description": "the text to search for terms"
				},
				{
				"name" 		: "bShowDomain",
				"type" 		: "boolean",
				"description": "whether to show the domain label in the dialog"
				},
				{
				"name" : "bShowTextType",
				"type" : "boolean",
				"description": "whether to show the text type dropdown list in the dialog"
				},
				{
				"name" : "bAllowChangeTextType",
				"type" : "boolean",
				"description": "whether to allow the users to change the text type"
				},
				{
				"name" : "oPlaceAt",
				"type" : "object",
				"description": "the place to show the dialog. it should in format of {top: , left: }"
				},
				{
				"name" : "oCurrentStatus",
				"type" : "object",
				"description": "wany extra info, not used at this moment"
			}]
		},
		"hideTermUI" : {
			"description": "Hides the terms UI"
		},
		"getUUID":{
			"description": "Returns the current uuid",
			"returns" : {
				"type" : "string",
				"description" : "the UUID (unique ID) for translation as a bundle"
			}
		},
		"setUUID":{
			"description": "Sets uuid for translation bundle",
			"params":[{
				 "name"		: "sUUID",
				 "type"		: "string",
				 "description": "the UUID (unique ID) for translation as a bundle"
				}]
		},
		"updatePropertyKey": {
			"description": "Write the property (key and value) and its comments for specific language into the property file under i18n folder.",
			"params":[{
				 "name"		: "sLanguage",
				 "type"		: "string",
				 "description": "the language for the property file where the key was created. Set to 'undefined' to use default property file"
				},
				{
				 "name"		: "sModel",
				 "type"		: "string",
				 "description": "the model for the property file where the key was created. It will be the first part of the property file name. default is 'i18n'"
				},
				{
				 "name"		: "oProperty",
				 "type"		: "object",
				 "description": "the property to be written to the property file. it is in format of {key: '', value: '', textType: '', extraInfo: ''}"
				},
				{
				 "name"		: "oDocument",
				 "type"		: "object",
				 "description": "the current selected document"
				}],
			"returns" : {
				"type" : "object",
				"description" : "the property file object"
			}
		},
		"updatePropertyKeys": {
			"description": "Writes the an array of properties (key and value) and their comments for specific language into the property file under i18n folder.",
			"params":[{
				 "name"		: "sLanguage",
				 "type"		: "string",
				 "description": "the language for the property file where the key was created. Set to 'undefined' to use default property file"
				},
				{
				 "name"		: "sModel",
				 "type"		: "string",
				 "description": "the model for the property file where the key was created. It will be the first part of the property file name. default is 'i18n'"
				},
				{
				 "name"		: "aProperties",
				 "type"		: "[object]",
				 "description": "the properties to be written to the property file. it is in format of [{key: '', value: '', textType: '', extraInfo: ''}]"
				},
				{
				 "name"		: "oDocument",
				 "type"		: "object",
				 "description": "the current selected document"
				}],
			"returns" : {
				"type" : "object",
				"description" : "the property file object"
			}
		},
		"getPropertyKey": {
			"description" : "Gets a property (key and value) and its comments for specific language into the property file under i18n folder.",
			"params":[{
				 "name"		: "sLanguage",
				 "type"		: "string",
				 "description": "the language for the property file where to get the key from. set to 'undefined' to use default property file"
				},
				{
				 "name"		: "sModel",
				 "type"		: "string",
				 "description": "the model for the property file where to get the key from. It will be the first part of the property file name. default is 'i18n'"
				},
				{
				 "name"		: "sKey",
				 "type"		: "string",
				 "description": "the key to be retrieved"
				},
				{
				 "name"		: "oDocument",
				 "type"		: "object",
				 "description": "the current selected document"
				}],
			"returns" : {
				"type" : "object",
				"description" : "the the property item for the key in format of {key: '', value: '', textType: '', extraInfo: ''}"
			}
		},
		"deletePropertyKey": {
			"description": "Deletes a property (key and value) and its comments for specific language/bundle from the property file under i18n folder.",
			"params":[{
				 "name"		: "sLanguage",
				 "type"		: "string",
				 "description": "the language for the property file where to delete the key from. set to 'undefined' to use default property file"
				},
				{
				 "name"		: "sModel",
				 "type"		: "string",
				 "description": "the model for the property file where to delete the key from. It will be the first part of the property file name. default is 'i18n'"
				},
				{
				 "name"		: "sKey",
				 "type"		: "string",
				 "description": "the key to be deleted"
				},
				{
				 "name"		: "oDocument",
				 "type"		: "object",
				 "description": "the current selected document"
				}],
			"returns" : {
				"type" : "object",
				"description" : "The property file object"
			}
		},
		"getAllPropertyKeys": {
			"description" : "Gets all properties (key and value) and its comments for specific language from the property file under i18n folder.",
			"params":[{
				 "name"		: "sLanguage",
				 "type"		: "string",
				 "description": "the language for the property file where to get the key from. set to 'undefined' to use default property file"
				},
				{
				 "name"		: "sModel",
				 "type"		: "string",
				 "description": "the model for the property file where to get the key from. It will be the first part of the property file name. default is 'i18n'"
				},
				{
				 "name"		: "oDocument",
				 "type"		: "object",
				 "description": "the current selected document"
				}],
			"returns" : {
				"type" : "[object]",
				"description" : "the array of the property item for the all keys in format of [{key: '', value: '', textType: '', extraInfo: ''}]"
			}
		},
		"isEntityTranslatable" : {
			"description" : "Checks if an document entity is translatable.",
			"params" : [{
				"name" : "oEntity",
				"type" : "object",
				"description": "a document entity"
			}],
			"returns" : "boolean"
		},
		"isShowPopup" : {
			"description" : "Returns true if the terms popup is open and visible",
			"returns" : "boolean"			
		}
	},
	
	"events" : {
		"translated" : {
			"description" : "It's the timing when the term is translated."
		}		
	}
}