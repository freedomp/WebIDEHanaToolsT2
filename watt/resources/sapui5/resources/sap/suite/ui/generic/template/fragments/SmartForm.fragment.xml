<core:FragmentDefinition xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
						 xmlns="sap.m" xmlns:sfo="sap.ui.comp.smartform" xmlns:l="sap.ui.layout"
						 xmlns:core="sap.ui.core" xmlns:build="sap.build">
	<!--
        @classdesc
        @name: Name: sap.suite.ui.generic.template.fragments.SmartForm.fragment.xml
        @param {Collection(UI.Facet)} [facet]
    -->

	<sfo:SmartForm id="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::Form"
				   editable="{ui>/editable}"
				   class="sapSmartTemplatesSmartForm"
				   visible="{= !${parameter>/isDraftEnabled} &amp;&amp; ${path: 'groupFacet>Target/AnnotationPath', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.isSelf'} === false ? '{= !${ui>/createMode} ? true : false }' : true}"
				   flexEnabled="false"
				   entityType="{parts: [{path: 'facet>'}, {path: 'entitySet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getEntityTypesForFormPersonalization'}"
				   build:metadta="#pattern:Form;">
		<sfo:customData>
           	<core:CustomData key="defaultInputFieldDisplayBehaviour" value="descriptionAndId"/>
           	<core:CustomData key="defaultDropDownDisplayBehaviour" value="descriptionOnly"/>
           	<core:CustomData key="dateFormatSettings" value='\{"UTC":true,"style":"short"\}'/>
		</sfo:customData>
		<sfo:layout>
			<sfo:Layout columnsM="1" columnsL="3" labelSpanS="12" labelSpanM="12" labelSpanL="12" />
		</sfo:layout>
		<!-- If the given facet has subfacets... -->
		<template:if test="{facet>Facets}" build:metadata="#ignore">
			<template:then build:metadata="#ignore">
				<template:repeat list="{facet>Facets}" var="groupFacet">
					<template:with path="groupFacet>Target"
								   helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="target">
						<sfo:Group id="{path: 'groupFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::FormGroup"
								   binding="{parts: [{path: 'groupFacet>Target'}, {path: 'entitySet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getNavigationPathWithExpand'}"
								   label="{= ${groupFacet>Label} ? ${path: 'groupFacet>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'} : '' }"
                                   build:metadata="#pattern:FormGroup;staticProp:label:Title;condition:target>AnnotationType:com.sap.vocabularies.UI.v1.FieldGroup">
							<template:if test="{target>Data}" build:metadata="#ignore">
								<template:then build:metadata="#ignore">
									<template:repeat list="{target>Data}" var="dataField">
										<template:if test="{= ${dataField>RecordType} !== 'com.sap.vocabularies.UI.v1.DataFieldForAction'}" build:metadata="#ignore">
											<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.SmartFormDataField"
														   type="XML"/>
										</template:if>
									</template:repeat>
								</template:then>
								<template:else>
									<template:repeat list="{target>}" var="dataField">
										<template:if test="{= ${dataField>RecordType} !== 'com.sap.vocabularies.UI.v1.DataFieldForAction'}">
											<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.SmartFormDataField"
														   type="XML"
                                                           build:metadata="#ignore"/>
										</template:if>
									</template:repeat>
								</template:else>
							</template:if>
						</sfo:Group>
					</template:with>
				</template:repeat>
			</template:then>
			<template:else>
				<template:with path="facet>" var="groupFacet">
					<template:with path="facet>Target" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="target">
						<sfo:Group id="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::FormGroup"
								   binding="{parts: [{path: 'facet>Target'}, {path: 'entitySet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getNavigationPathWithExpand'}">
							<template:if test="{target>Data}">
								<template:then>
									<template:repeat list="{target>Data}" var="dataField">
										<template:if test="{= ${dataField>RecordType} !== 'com.sap.vocabularies.UI.v1.DataFieldForAction'}">
											<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.SmartFormDataField"
														   type="XML"
														   build:metadata="#ignore"/>
										</template:if>
									</template:repeat>
								</template:then>
								<template:else>
									<template:repeat list="{target>}" var="dataField">
										<template:if test="{= ${dataField>RecordType} !== 'com.sap.vocabularies.UI.v1.DataFieldForAction'}">
											<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.SmartFormDataField"
														   type="XML"
														   build:metadata="#ignore"/>
										</template:if>
									</template:repeat>
								</template:else>
							</template:if>
						</sfo:Group>
					</template:with>
				</template:with>
			</template:else>
		</template:if>
	</sfo:SmartForm>

</core:FragmentDefinition>
