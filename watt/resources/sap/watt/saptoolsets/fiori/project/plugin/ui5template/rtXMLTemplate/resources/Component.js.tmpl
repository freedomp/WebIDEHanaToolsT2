jQuery.sap.declare("{{rtXMLTemplate.parameters.ProjectNamespace.value}}.Component");
jQuery.sap.require("{{rtXMLTemplate.parameters.ProjectNamespace.value}}.FieldHelper");
jQuery.sap.require("sap.ui.model.odata.AnnotationHelper");

sap.ui.core.UIComponent.extend("{{rtXMLTemplate.parameters.ProjectNamespace.value}}.Component", {
    metadata : {
    
	    config : {
			serviceConfig : {
			    name: "{{connectionData.serviceName}}",
				serviceUrl: "{{connectionData.runtimeUrl}}"
			},
			annotations : "{{{annotations}}}",
		    sEntitySet : "{{rtXMLTemplate.parameters.ODataCollection.value.name}}"
		}
	},
	
    
	createContent : function() {
        
        var oLayout = new sap.m.VBox("mainLayout");
        var oDetailsLayout = new sap.m.HBox("detailsLayout");
        var mConfig = this.getMetadata().getConfig();
    	var sEntityMetadataPath;
    	var annotations = mConfig.annotations;
        
        oDetailsLayout.addStyleClass("layoutStyle");
		if (!annotations){
		    annotations = ["MockServer/annotations/$value"];
		} 
		
		
{{~#unless xmlViewTemplates.[0].preprocess}}
        // Using mock for the annotation.xml       
{{~else}}   
		var oViewData = {
            component : this
        };

        var mainView = new  sap.ui.view({
            viewName : "{{rtXMLTemplate.parameters.ProjectNamespace.value}}.view.Main",
            type : sap.ui.core.mvc.ViewType.XML,
            viewData : oViewData
        });
        
        // Using mock for the annotation.xml
{{~/unless}}
	    jQuery.sap.require("sap.ui.core.util.MockServer");
	    var oMock = new sap.ui.core.util.MockServer({
			requests : [{
				method : "GET",
				path : new RegExp(sap.ui.core.util.MockServer.prototype
					._escapeStringForRegExp(sAnnotationUrl )),
				response : function(oXHR) {
					oXHR.respondFile(200, {}, "model/annotations.xml");
				}
			}]
		});
		
		oMock.start();
			
        var oModel = new sap.ui.model.odata.v2.ODataModel(mConfig.serviceConfig.serviceUrl, {
			annotationURI : sAnnotationUrl,
			json : true
		});
		
        oModel.getMetaModel().loaded().then(function () {
            var oMetaModel = oModel.getMetaModel();

            jQuery.each(oMetaModel.getObject("/dataServices/schema/0/entityContainer/0/entitySet"),
    			function (i, oEntity) {
    				if (oEntity.name === mConfig.sEntitySet) {
    					sEntityMetadataPath = "/dataServices/schema/0/entityContainer/0/entitySet/" + i;
    				}
    			}
    		);
    
    		var oMetaContext = oMetaModel.createBindingContext(sEntityMetadataPath);
{{~#unless xmlViewTemplates.[0].preprocess}}
    		var oView = sap.ui.view({
    			preprocessors: {
    				xml: {
    					bindingContexts: {
    					   meta: oMetaContext
    					},
    					models: {
    					    meta: oMetaModel
    					}
    				}
    			},
    			id : "testView",
    			type: sap.ui.core.mvc.ViewType.XML,
    			viewName: "{{rtXMLTemplate.parameters.ProjectNamespace.value}}.view.Main"
    		}, function (oError) {
    			jQuery.sap.require("sap.m.MessageBox");
    			sap.m.MessageBox.alert(oError.message, {
    				icon: sap.m.MessageBox.Icon.ERROR,
    				title: "Error"});
    		});
            
    	    var oTable = oView.byId("mainTable");
            oTable.setModel(oModel);
            oLayout.addItem(oView);
            oLayout.addItem(oDetailsLayout);
            
            oView.setModel({
                "model" : oModel,
                "metaModel" : oMetaModel,
                "metaContext" : oMetaContext
            });				
{{~else}}

    	    var oTable = mainView.byId("mainTable");
            oTable.setModel(oModel);
            oLayout.addItem(mainView);
            oLayout.addItem(oDetailsLayout);
            
            mainView.setModel({
                "model" : oModel,
                "metaModel" : oMetaModel,
                "metaContext" : oMetaContext
            });	            
{{~/unless}}         
            //Stop mock server
            sap.ui.core.util.MockServer.destroyAll();
        }, function (oError) {
			jQuery.sap.require("sap.m.MessageBox");
			sap.m.MessageBox.alert(oError.message, {
				icon: sap.m.MessageBox.Icon.ERROR,
				title: "Error"});
		});
        
        return oLayout;
	}
});