// based on commit
//49c9fdd5c9953b189aadaf4a612170daeb91a74a CDS: Simplify parameterized tests
RequirePaths.setRequireJsConfigForHanaDdl(2);

define(
    [ "commonddl/commonddlNonUi",
		"TestUtilEclipseSelectionHandling",
        "rndrt/rnd",
        "./AbstractV3HanaDdlParserTests",
        "NavigationTestUtil"

    ], // dependencies
    function(commonddlNonUi, TestUtilEclipseSelectionHandling, rnd, AbstractV3HanaDdlParserTests, NavigationTestUtil) {
        var AbstractAnnotationImpl = commonddlNonUi.AbstractAnnotationImpl;
        var CompilationUnitImpl = commonddlNonUi.CompilationUnitImpl;
        var ConstDeclarationImpl = commonddlNonUi.ConstDeclarationImpl;
        var ContextDeclarationImpl = commonddlNonUi.ContextDeclarationImpl;
        var DdlStatementImpl = commonddlNonUi.DdlStatementImpl;
        var ElementDeclarationImpl = commonddlNonUi.ElementDeclarationImpl;
        var EntityDeclarationImpl = commonddlNonUi.EntityDeclarationImpl;
        var EnumerationDeclarationImpl = commonddlNonUi.EnumerationDeclarationImpl;
        var EnumerationValueImpl = commonddlNonUi.EnumerationValueImpl;
        var LiteralExpressionImpl = commonddlNonUi.LiteralExpressionImpl;
        var Token = rnd.Token;
        var Utils = rnd.Utils;
        var ErrorState = rnd.ErrorState;
        function TestsUnitNavigateToActionV3() {
        }
        TestsUnitNavigateToActionV3.prototype = Object.create(AbstractV3HanaDdlParserTests.prototype);
        TestsUnitNavigateToActionV3.prototype.navigateToFieldInViewSignature = function() {
            return NavigationTestUtil.navigate("                               " + "context c{                                         " + "   VIEW v3 AS                                      "+ "	SELECT FROM e1                                  "+ "	{                                               "+ "		#selection.begin.one#k1#selection.end.one#  "+ "	}                                               "+ "	UNION                                           "+ "	SELECT FROM e2                                  "+ "	{                                               "+ "		k2                                          "+ "	};                                              "+ "                                                   "+ "   VIEW v4 AS SELECT FROM v3                       "+ "   {                                               "+ " 	   v3.k#selection.two#1                         "+ "   };                                              "+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateToViewAdHocAssociationDefinition = function() {
			return NavigationTestUtil.navigate("                               " + "context c{                                         " + "entity entityInTest1a {							"+ "	key id : Integer;								"+ "	value : String(100);							"+ "	ass : association to enti2InTest1;				"+ "};													"+ "entity enti2InTest1 {								"+ "	key id : Integer;								"+ "};													"+ " VIEW myView AS SELECT FROM entityInTest1a 		"+ " MIXIN { #selection.begin.one#myAssoc#selection.end.one# : ASSOCIATION TO  entityInTest1a ON  myAs#selection.two#soc.value = fritz and "+ "myAssoc.ass.id = 3;  } "+ "into { id as i1, 1 as fritz };"+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateToViewAdHocAssociationTarget = function() {
			return NavigationTestUtil.navigate("                               " + "context c{                                         " + "entity entityInTest1a {							"+ "	key id : Integer;								"+ "	#selection.begin.one#value#selection.end.one# : String(100);							"+ "	ass : association to enti2InTest1;				"+ "};													"+ "entity enti2InTest1 {								"+ "	key id : Integer;								"+ "};													"+ " VIEW myView AS SELECT FROM entityInTest1a 		"+ " MIXIN { myAssoc : ASSOCIATION TO  entityInTest1a ON  myAssoc.va#selection.two#lue = fritz and myAssoc.ass.id = 3;  } "+ "into { id as i1, 1 as fritz };"+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateToViewAdHocAssociationTarget2 = function() {
			return NavigationTestUtil.navigate("                               " + "context c{                                         " + "entity entityInTest1a {							"+ "	key id1 : Integer;								"+ "	value : String(100);							"+ "	ass : association to enti2InTest1;				"+ "};													"+ "entity enti2InTest1 {								"+ "	key #selection.begin.one#id#selection.end.one# : Integer;								"+ "};													"+ " VIEW myView AS SELECT FROM entityInTest1a 		"+ " MIXIN { myAssoc : ASSOCIATION TO  entityInTest1a ON  myAssoc.value = fritz and myAssoc.ass.i#selection.two#d = 3;  } "+ "into { id as i1, 1 as fritz };"+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateToSelectListEntryUsedInsideViewAdHocAssociation = function() {
			return NavigationTestUtil.navigate("                               " + "context c{                                         " + "entity entityInTest1a {							"+ "	key #selection.begin.one#id1#selection.end.one# : Integer;								"+ "	value : String(100);							"+ "	ass : association to enti2InTest1;				"+ "};													"+ "entity enti2InTest1 {								"+ "	key id : Integer;								"+ "};													"+ "VIEW myView AS SELECT FROM entityInTest1a "+ "MIXIN { myAssoc : ASSOCIATION TO  entityInTest1a ON  myAssoc.value = fritz and myAssoc.ass.id = i#selection.two#d1;  } into { id as i1, 1 as fritz }; "+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateToViewSelectListEntryLongerPathNoAlias = function() {
			return NavigationTestUtil.navigate("namespace d037066.playground;                          " + "context testc {                                        "+ "    entity e1 {                                        "+ "       key e1id : Integer;                             "+ "       e1v : Integer;                                  "+ "  };                                                   "+ "  entity e2 {                                          "+ "       key e2id : Integer;                             "+ "       e2v : Integer;                                  "+ "  };                                                   "+ "  view v1 as select from e1 mixin {                    "+ "       ass : association to e2 on e1id = ass.e2id;     "+ "  }into {                                              "+ "       e1,                                             "+ "       #selection.begin.one#ass.e2id#selection.end.one#                                        "+ "  };                                                   "+ "  view v2 as select from v1  mixin{                    "+ "   app : association to v1 on v1.e1 = id;              "+ "   app2 : association to v1 on id = id;                "+ "  }into{                                               "+ "        app.e2#selection.two#id										"+ "  };													"+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateToEnumDeclaration = function() {
			return NavigationTestUtil.navigate("namespace d037066.playground;                          " + "context testc {                                        "+ "type my : Integer enum { yyy = 1;#selection.begin.one#xxxx=2;#selection.end.one#zzz=3;} ;		"+ "type ttt {                                             "+ "	a : my default #x#selection.two#xxx;                               "+ "	b : type of a default #zzz;                         "+ "	c : Integer enum { o = 1;oo=2;} default #o;         "+ "	d : type of c default #oo;                          "+ "};													    "+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateToEnumDeclarationTypeOfUsage = function() {
			return NavigationTestUtil.navigate("namespace d037066.playground;                          " + "context testc {                                        "+ "type my : Integer enum { yyy = 1;xxxx=2;#selection.begin.one#zzz=3;#selection.end.one#} ;		"+ "type ttt {                                             "+ "	a : my default #xxxx;                               "+ "	b : type of a default #zz#selection.two#z;                         "+ "	c : Integer enum { o = 1;oo=2;} default #o;         "+ "	d : type of c default #oo;                          "+ "};													    "+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateToEnumInStructure = function() {
			return NavigationTestUtil.navigate("type my : Integer enum { yyy = 1;aaaaa=2;zzz=3;} ;             " + "type struc {                                                   " + "	en : Integer enum { #selection.begin.one#aaaaa = 1;#selection.end.one# bbbbb = 2;};                 "+ "};                                                             "+ "entity en2 {                                                   "+ "	key id : Integer;                                           "+ "	aa : Integer enum { aaaaa = 1; bbbbb = 2;};                 "+ "};                                                             "+ "type ttt {                                                     "+ "	a : my default #aaaaa;                                      "+ "	b : type of a default #aaaaa;                               "+ "	b1 : type of struc.en default #a#selection.two#aaaa;                       "+ "	b2 : type of en2.aa default #aaaaa;                         "+ "	c : Integer enum { aaaaa = 1;oo=2;} default #aaaaa;			"+ "	d : type of c default #aaaaa;								"+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateToEnumInEntity = function() {
			return NavigationTestUtil.navigate("type my : Integer enum { yyy = 1;aaaaa=2;zzz=3;} ;             " + "type struc {                                                   " + "	en : Integer enum { aaaaa = 1; bbbbb = 2;};                 "+ "};                                                             "+ "entity en2 {                                                   "+ "	key id : Integer;                                           "+ "	aa : Integer enum { #selection.begin.one#aaaaa = 1;#selection.end.one# bbbbb = 2;};                 "+ "};                                                             "+ "type ttt {                                                     "+ "	a : my default #aaaaa;                                      "+ "	b : type of a default #aaaaa;                               "+ "	b1 : type of struc.en default #aaaaa;                       "+ "	b2 : type of en2.aa default #aa#selection.two#aaa;                         "+ "	c : Integer enum { aaaaa = 1;oo=2;} default #aaaaa;			"+ "	d : type of c default #aaaaa;								"+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateToEnumInSameAttribute = function() {
			return NavigationTestUtil.navigate("type my : Integer enum { yyy = 1;aaaaa=2;zzz=3;} ;             " + "type struc {                                                   " + "	en : Integer enum { aaaaa = 1; bbbbb = 2;};                 "+ "};                                                             "+ "entity en2 {                                                   "+ "	key id : Integer;                                           "+ "	aa : Integer enum { aaaaa = 1; bbbbb = 2;};                 "+ "};                                                             "+ "type ttt {                                                     "+ "	a : my default #aaaaa;                                      "+ "	b : type of a default #aaaaa;                               "+ "	b1 : type of struc.en default #aaaaa;                       "+ "	b2 : type of en2.aa default #aaaaa;                         "+ "	c : Integer enum { #selection.begin.one#aaaaa = 1;#selection.end.one#oo=2;} default #a#selection.two#aaaa;			"+ "	d : type of c default #aaaaa;								"+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateToEnumInTypeOfAttribute = function() {
			return NavigationTestUtil.navigate("type my : Integer enum { yyy = 1;aaaaa=2;zzz=3;} ;             " + "type struc {                                                   " + "	en : Integer enum { aaaaa = 1; bbbbb = 2;};                 "+ "};                                                             "+ "entity en2 {                                                   "+ "	key id : Integer;                                           "+ "	aa : Integer enum { aaaaa = 1; bbbbb = 2;};                 "+ "};                                                             "+ "type ttt {                                                     "+ "	a : my default #aaaaa;                                      "+ "	b : type of a default #aaaaa;                               "+ "	b1 : type of struc.en default #aaaaa;                       "+ "	b2 : type of en2.aa default #aaaaa;                         "+ "	c : Integer enum { #selection.begin.one#aaaaa = 1;#selection.end.one#oo=2;} default #aaaaa;			"+ "	d : type of c default #aa#selection.two#aaa;								"+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateToEnumDefinitionInEntity = function() {
			return NavigationTestUtil.navigate("context ctx {" + "type my : Integer enum { yyy = 1;aaaaa=2;zzz=3;} ;             " + "entity en1 {                                                   "+ "	key id : Integer;                                           "+ "	value : Integer enum { #selection.begin.one#aaaaa=1;#selection.end.one#bb=2; } default #aa#selection.two#aaa  ;    "+ "	mm : my default #aaaaa ;									"+ "};																"+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateToEnumDefinitionFromEntityToType = function() {
			return NavigationTestUtil.navigate("context ctx {" + "type my : Integer enum { yyy = 1;#selection.begin.one#aaaaa=2;#selection.end.one#zzz=3;} ;             " + "entity en1 {                                                   "+ "	key id : Integer;                                           "+ "	value : Integer enum { aaaaa=1;bb=2; } default #aaaaa  ;    "+ "	mm : my default #aaa#selection.two#aa ;									"+ "};																"+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateToEnumDefinitionInAnnotation = function() {
			return NavigationTestUtil.navigate("context ctx {" + "type my : Integer enum { yyy = 1;aaaaa=2;zzz=3;} ;             " + "annotation en1 {                                               "+ " id : Integer;                                           "+ "	value : Integer enum { #selection.begin.one#aaaaa=1;#selection.end.one#bb=2; } default #aa#selection.two#aaa  ;    "+ "	mm : my default #aaaaa ;									"+ "};																"+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateToEnumDefinitionFromAnnotationToType = function() {
			return NavigationTestUtil.navigate("context ctx {" + "type my : Integer enum { yyy = 1;#selection.begin.one#aaaaa=2;#selection.end.one#zzz=3;} ;             " + "annotation en1 {                                                   "+ "   id : Integer;                                           "+ "	value : Integer enum { aaaaa=1;bb=2; } default #aaaaa  ;    "+ "	mm : my default #aaa#selection.two#aa ;									"+ "};																"+ "};",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateFromViewSelectSetOrderByToSelectListEntryAlias = function() {
			return NavigationTestUtil.navigate("context union_prob {																	" + "      define entity e1{                                                                " + "                key k1: Integer;                                                       "+ "                f1 : String(20);                                                       "+ "                assocName1 : association to e2 on e1.k1 = assocName1.k2;               "+ "  };                                                                                   "+ "  define entity e2{                                                                    "+ "                key k2: Integer;                                                       "+ "                f2 : String(20);                                                       "+ "                assocName2 : association to e1 on e2.k2 = assocName2.k1;               "+ "  };                                                                                   "+ "  define view view_with_assoc as select from e1                                        "+ "  mixin { element assoc1 : association [1 ..* ] to e2 on k1 <= assoc1.k2 ;} into       "+ "  {                                                                                    "+ "                f1 as #selection.begin.one#meier#selection.end.one#,                   "+ "                assoc1.f2                                                              "+ "                                                                                       "+ "  }                                                                                    "+ "  union select from e2 as datasource2                                                  "+ "  mixin { element assoc2 : association [1 ..* ] to e1 on k2 <= assoc2.k1 ;} into       "+ "  {                                                                                    "+ "                assoc2.f1  ,                                                           "+ "                assoc2.f1 as feins                                                     "+ "			                                                                            "+ "  }                                                                                    "+ "  order by me#selection.two#ier, f2, meier * f2                                        "+ "  ;                                                                                    "+ "};                                                                                     ",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.navigateFromViewSelectSetOrderByToSelectListEntryPath = function() {
			return NavigationTestUtil.navigate("context union_prob {																	" + "      define entity e1{                                                                " + "                key k1: Integer;                                                       "+ "                f1 : String(20);                                                       "+ "                assocName1 : association to e2 on e1.k1 = assocName1.k2;               "+ "  };                                                                                   "+ "  define entity e2{                                                                    "+ "                key k2: Integer;                                                       "+ "                f2 : String(20);                                                       "+ "                assocName2 : association to e1 on e2.k2 = assocName2.k1;               "+ "  };                                                                                   "+ "  define view view_with_assoc as select from e1                                        "+ "  mixin { element assoc1 : association [1 ..* ] to e2 on k1 <= assoc1.k2 ;} into       "+ "  {                                                                                    "+ "                f1 as meier,                   "+ "                #selection.begin.one#assoc1.f2#selection.end.one#                      "+ "                                                                                       "+ "  }                                                                                    "+ "  union select from e2 as datasource2                                                  "+ "  mixin { element assoc2 : association [1 ..* ] to e1 on k2 <= assoc2.k1 ;} into       "+ "  {                                                                                    "+ "                assoc2.f1  ,                                                           "+ "                assoc2.f1 as feins                                                     "+ "			                                                                            "+ "  }                                                                                    "+ "  order by meier, f2, meier * f#selection.two#2                                        "+ "  ;                                                                                    "+ "};                                                                                     ",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.noNavigationInCaseOfErrorneousAst = function() {
			return NavigationTestUtil.navigateNoResult("context pgtestddl1014 {                                                                                     " + "                annotation Comment {                                                                        "+ "                               descr : String(11) ;                                                         "+ "                               localized: array of                                                          "+ "                               {                                                                            "+ "                                               language: String(2);                                         "+ "                                               text : String(111);                                          "+ "                               };                                                                           "+ "                };                                                                                          "+ "                @Comment.descr: 'Customer'                                                                  "+ "                @Comment.localized: []                                                                      "+ "                entity Cust#selection.begin.two##selection.end.two#omer {                                   "+ "                               @Comment: { descr: 'First Name', localized: [                                "+ "                               { language: 'en', text: 'This is the First Name' },                          "+ "                               { language: 'de', text: 'Das ist der Vorname' }                              "+ "                               ]}                                                                           "+ "                               key firstname : String(44);                                                  "+ "                               @Comment: { descr: 'Nick name', localized: []}                               "+ "                               nickname : String(44);                                                       "+ "                               @Comment.descr: 'Family'                                                     "+ "                               @Comment.localized: [{ language:'de', text: 'und das der Nachname' }]        "+ "                               surname : String(44);                                                        "+ "                };                                                                                          "+ "                                                                                                            "+ "};                                                                                                          ",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.NavigateToAspectInSameRole = function() {
			return NavigationTestUtil.navigate(" NAMESPACE d021678;                                                                 " + "                                                                                    " + " ACCESSPOLICY test_dcl {                                                            "+ "                                                                                    "+ "                                                                                    "+ "    DEFINE ROLE roleName1 {                                                         "+ "                                                                                    "+ "     ASPECT asp1 AS SELECT FROM employee{                                           "+ "     employee.toAddress.id}                                                         "+ "     WHERE $user IN employee.loginName;                                             "+ "                                                                                    "+ "    };                                                                              "+ "                                                                                    "+ "    DEFINE ROLE roleName {                                                          "+ "                                                                                    "+ "     ASPECT #selection.begin.one#asp2#selection.end.one# AS SELECT FROM employee{   "+ "     employee.toAddress.id}                                                         "+ "     WHERE $user in employee.loginName;                                             "+ "                                                                                    "+ "                                                                                    "+ "    	GRANT SELECT ON test1.addressView                                            "+ "    	WHERE                                                                        "+ "    	city = ASPECT :as#selection.two#p2;                                          "+ "                                                                                    "+ "    };                                                                              "+ "                                                                                    "+ "  };                                                                                ",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.NavigateToAspectInParallelRole = function() {
			return NavigationTestUtil.navigate(" NAMESPACE d021678;                                                                 " + "                                                                                    " + " ACCESSPOLICY test_dcl {                                                            "+ "                                                                                    "+ "                                                                                    "+ "    DEFINE ROLE roleName1 {                                                         "+ "                                                                                    "+ "     ASPECT #selection.begin.one#asp1#selection.end.one# AS SELECT FROM employee{   "+ "     employee.toAddress.id}                                                         "+ "     WHERE $user IN employee.loginName;                                             "+ "                                                                                    "+ "    };                                                                              "+ "                                                                                    "+ "    DEFINE ROLE roleName {                                                          "+ "                                                                                    "+ "     ASPECT asp2 AS SELECT FROM employee{                                           "+ "     employee.toAddress.id}                                                         "+ "     WHERE $user in employee.loginName;                                             "+ "                                                                                    "+ "                                                                                    "+ "    	GRANT SELECT ON test1.addressView                                            "+ "    	WHERE                                                                        "+ "    	city = ASPECT :roleName1.as#selection.two#p1;                                 "+ "                                                                                    "+ "    };                                                                              "+ "                                                                                    "+ "  };                                                                                ",this.getParser(),this.getPadFileResolver());
        };
        TestsUnitNavigateToActionV3.prototype.NavigateToRole = function() {
			return NavigationTestUtil.navigate(" NAMESPACE d021678;                                                                 " + "                                                                                    " + " ACCESSPOLICY test_dcl {                                                            "+ "                                                                                    "+ "                                                                                    "+ "    DEFINE ROLE #selection.begin.one#roleName1#selection.end.one# {                 "+ "                                                                                    "+ "     ASPECT asp1 AS SELECT FROM employee{                                           "+ "     employee.toAddress.id}                                                         "+ "     WHERE $user IN employee.loginName;                                             "+ "                                                                                    "+ "    };                                                                              "+ "                                                                                    "+ "    DEFINE ROLE roleName {                                                          "+ "                                                                                    "+ "     ASPECT asp2 AS SELECT FROM employee{                                           "+ "     employee.toAddress.id}                                                         "+ "     WHERE $user in employee.loginName;                                             "+ "                                                                                    "+ "                                                                                    "+ "    	GRANT SELECT ON test1.addressView                                            "+ "    	WHERE                                                                        "+ "    	city = ASPECT :role#selection.two#Name1.asp1;                                "+ "                                                                                    "+ "    };                                                                              "+ "                                                                                    "+ "  };                                                                                ",this.getParser(),this.getPadFileResolver());
        };



        TestsUnitNavigateToActionV3.prototype.testAllMethodsInSupportedVersions(true);

        QUnit.start();
    }
);