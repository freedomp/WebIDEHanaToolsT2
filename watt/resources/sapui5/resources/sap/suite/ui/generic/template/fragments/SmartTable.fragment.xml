<core:FragmentDefinition xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
						 xmlns="sap.m"  xmlns:build="sap.build" xmlns:core="sap.ui.core" xmlns:st="sap.ui.comp.smarttable">
	<!--
        @classdesc
        @name: Name: sap.suite.ui.generic.template.fragments.SmartTable.fragment.xml
        @param {UI.Facet} [facet]
        @param {edm.EntitySet} [entitySet]
        @param {edm.EntityType} [entityType]
    -->

	<template:with path="facet>Target" var="target">
		<template:with path="target>" helper="sap.suite.ui.generic.template.js.AnnotationHelper.getEntitySetOfPath"
					   var="subEntitySet">
			<template:with path="target>" helper="sap.ui.model.odata.AnnotationHelper.gotoEntitySet"
						   var="listEntitySet">
				<template:with path="target>" helper="sap.ui.model.odata.AnnotationHelper.resolvePath"
							   var="collection">
					<st:SmartTable id="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::Table"
								   tableBindingPath="{= ${path: 'target>AnnotationPath'}.slice(0, ${path: 'target>AnnotationPath'}.indexOf('/')) }"
								   fitContainer="false" persistencyKey="" useOnlyOneSolidToolbar="true"
								   enableAutoBinding="true" showRowCount="true"
								   beforeRebindTable="onBeforeRebindTable"
								   dataReceived="onDataReceived"
								   tableType="ResponsiveTable" useExportToExcel="true" useTablePersonalisation="true"
								   entitySet="{path: 'subEntitySet>name'}"
								   class="sapSmartTemplatesSmartTable"
								   demandPopin="true"
                                   build:metadata="#pattern:Table;bindingContext:columns:Items:{path: 'target>', formatter: 'sap.ui.model.odata.AnnotationHelper.getNavigationPath'};">
						<st:customData>
							<core:CustomData key="dateFormatSettings" value='\{"UTC":true,"style":"short"\}'/>
							<template:with path="listEntitySet>entityType" helper="sap.ui.model.odata.AnnotationHelper.gotoEntityType"
										   var="entityType">
								<template:with path="entityType>com.sap.vocabularies.UI.v1.PresentationVariant" var="variant">
									<template:if test="{= ${variant>SortOrder}}">
										<core:CustomData key="TemplateSortOrder"
														 value="{path: 'variant>SortOrder', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getSortOrder'}"/>
									</template:if>
								</template:with>
							</template:with>
						</st:customData>
						<st:customToolbar>
							<OverflowToolbar design="Transparent">
								<ToolbarSpacer/>
								<template:repeat list="{collection>}" var="dataField">
									<template:if test="{= ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForAction' || ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation'}"
                                                 build:metadata="#ignore">
										<template:with path="dataField>Action"
													   helper="sap.ui.model.odata.AnnotationHelper.gotoFunctionImport"
													   var="action">
											<Button id="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::action::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}"
													text="{path: 'dataField>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
													press="onCallActionFromList" type="Transparent"
                                                    build:metadata="#pattern:TableAction;staticProp:text:Label;staticProp::Importance:{dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember};condition:datafield>RecordType:com.sap.vocabularies.UI.v1.DataFieldForAction">
												<layoutData>
													<OverflowToolbarLayoutData moveToOverflow="{= !(${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/High')}"
																			   stayInOverflow="{= ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/Low'}"/>
												</layoutData>
												<customData>
													<core:CustomData key="Type" value="{dataField>RecordType}"/>
													<template:if test="{= ${dataField>SemanticObject}}">
														<core:CustomData key="SemanticObject"
																		 value="{path: 'dataField>SemanticObject', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"/>
													</template:if>
													<core:CustomData key="Action"
																	 value="{path: 'dataField>Action', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"/>
													<core:CustomData key="Label"
																	 value="{path: 'dataField>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"/>
												</customData>
											</Button>
										</template:with>
									</template:if>
								</template:repeat>
								<template:if test="{= !(${entitySet>Org.OData.Capabilities.V1.InsertRestrictions/Insertable/Bool} === 'false') }">
									<Button id="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::addEntry"
											icon="sap-icon://add" press="addEntry" visible="{ui>/editable}"/>
								</template:if>
							</OverflowToolbar>
						</st:customToolbar>
						<Table id="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::responsiveTable"
							   fixedLayout="false" noDataText="{i18n>NOITEMS}" growing="true" growingThreshold="10"
							   mode="{= ${path: 'collection>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.hasActions'} ? 'SingleSelectLeft' : 'None' }">
							<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.TableColumns" type="XML"/>
						</Table>
					</st:SmartTable>
				</template:with>
			</template:with>
		</template:with>
	</template:with>
</core:FragmentDefinition>
