/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

        (c) Copyright 2009-2015 SAP SE. All rights reserved
    
 */
/* Global CSS for 'base' theme */
/* ---------------------------------------------------------------------------------------- */
/* TMP during LESS convertion ---- to be deleted */
/* may be required by SubstitutionRulesManager.css in inbox lib */
/* ---------------------------------------------------------------------------------------- */
/** 
  * This parameter is used in the Shell control to calculate the size when it grows.
  * !!! ONLY PX-VALUES ARE ALLOWED HERE. 
  */
/** 
  * This parameter is used in the Shell control to calculate the size of the margin when showing
  * an overflow button in the right pane. As of 1.18.0 this value contains the _maximum_ height
  * of the overflow button, if the text inside the button is smaller, the button shrinks with it.
  * !!! ONLY PX-VALUES ARE ALLOWED HERE.
  */
/* Approved by UX to use a hard coded color value for this */
/* NotificationBar */
/* The maximized height will be calculated corresponding to the window's height.*/
/* ToolPopup */
/* Telling the ToolPopup if it's inverted per default */
/* transparent; */
/* Default margins classes to be used by the application for all controls */
/*make tiny margin themable*/
/*make small margin themable*/
/*make medium margin themable*/
/*make large margin themable*/
/* 
 * This is a mixin for creating the predefined container content padding
 * classes:
 * sapUiNoContainerContentPadding
 * sapUiContainerContentPadding
 * sapUiResponsiveContainerContentPadding
 * These classes can be set on many UI5 containers and will 
 * add padding inside the container's content padding based 
 * on the selectors that are arguments for this mixin.
 *
 * Arguments to this function-like mixin are the rootClass selector and
 * the content selector where the padding should be applied.
 */
/* 
  * the sapLess-parser has problems with an escaped string as default value for the parameterized mixin
  * therefore we need to temporarily use a parameter assigning the default value
  */
.sapVizKitViewer {
  touch-action: none;
  -ms-touch-action: none;
  background-color: #ffffff;
}
.sapVizKitViewport {
  width: 100%;
  height: 100%;
  padding: 0px;
  margin: 0px;
  background-image: linear-gradient(to bottom, #000000, #ffffff);
}
.sapVizKitViewport canvas {
  display: block;
  width: 100%;
  height: 100%;
  padding: 0px;
  margin: 0px;
}
/*...........................................................................*/
/* LESS for control sap.ui.vk/Overlay.control...................................*/
/*...........................................................................*/
/* main overlay container style..................................................*/
.sapUiVkOverlay {
  border: none;
  width: 100%;
  height: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.sapVizKitNativeViewport {
  display: inline-block;
  width: 100%;
  height: 100%;
  background-color: white;
  overflow: hidden;
}
.sapRULTSceneTree {
  width: 100%;
  height: 100%;
  -webkit-transform: translate3d(0, 0, 0);
}
.sapUiVkTitle {
  width: 100%;
  height: 100%;
  padding: 0.5em 0 0 0.5em;
}
*:focus {
  outline: 1px dotted #111177;
}
.sapVizKitStepNavigationStepItem {
  border: none;
  padding: 0.1875em;
}
.sapVizKitStepNavigationStepItem.selected {
  border: 0.1875em solid;
  padding: 0;
  border-color: #111177;
}
.sapVizKitStepNavigationStepItem:hover:not(.selected) {
  border: 0.1875em solid;
  padding: 0;
  border-color: #000000;
}
.sapVizKitStepNavigationPopoverStepInfo {
  width: "20%";
  height: "15%";
}
.sapVizKitStepNavigationPopoverContent {
  padding: 1rem;
}
.sapVizKitStepNavigationPlayOptionsSelect {
  width: 15em;
}
.sapVizKitStepNavigationProcedureList {
  width: 30%;
}
.sapUiFlexControl {
  float: left;
  position: relative;
  display: block;
  overflow: hidden;
}
.sapUiFlexCellStacked {
  display: block;
  width: 100%;
  height: 100%;
  position: absolute;
  overflow: auto;
}
.sapUiFlexCellVertical {
  display: block;
  width: 100%;
  position: static;
  overflow: auto;
}
.sapUiCheckEye input[type="checkbox"] {
  display: none;
}
.sapUiCheckEye input[type="checkbox"] + label:before {
  content: "\e1ea";
  font-family: "SAP-icons";
  font-size: 1.5em;
  color: #808080;
}
.sapUiCheckEye input[type="checkbox"]:checked + label:before {
  content: "\e1e9";
  font-family: "SAP-icons";
  font-size: 1.5em;
  color: #a9a9a9;
}
