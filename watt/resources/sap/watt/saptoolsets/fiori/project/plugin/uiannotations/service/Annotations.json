{
	"name" : "sap.watt.uitools.plugin.uiannotations.service.Annotations",
	"description": "The UI Annotations service",
	"methods" : {
		"getAnnotationXML" : {
			"description": "Gets the annotation file content as xml",
			"params" : [
				{
					"name" : "oDestination",
					"type" : "object",
					"description" : "an object which consists of : description, name, path, url and wattUsage"
				},
				{
					"name" : "sAnnotationsRelativeUrl",
					"type" : "string",
					"description" : "annotation relative URL"
				}],
			"returns": {
				"type" : "string",
				"description" : "The xml content as string"
			}
		},
		"isMetaDataContainsAnnotions" : {
			"description": "Checks if metadata contains annotations",
			"params" : [
				{
					"name" : "oMetaDataContent",
					"type" : "string",
					"description" : "metadata file content"
				}
			],
			"returns": {
				"type" : "boolean",
				"description" : "true if the given metadata contains annotation"
			}
		},
		"getMetaModel" : {
			"description": "Creates and return metaModel based on the service and list of annotation files",
			"params" : [
				{
					"name" : "sServiceUri",
					"type" : "string",
					"description" : "Service URI"
				},
				{
					"name" : "aAnnotations",
					"type" : "object",
					"description" : "Array of annotations"
				}
			],
			"returns": {
				"type" : "object",
				"description" : "metaModel based on the service and list of annotation files"
			}
		},
		"getAnnotationsUrls" : {
			"description": "Returns an array of Annotations files urls for a specific service",
			"params" : [
				{
					"name" : "oDestination",
					"type" : "[object]",
					"description" : "Destination object"
				},
				{
					"name" : "sServiceUri",
					"type" : "string",
					"description" :  "Service URI"
				}
			],
			"returns": {
				"type" : "object",
				"description" : "Array of annotations urls"
			}
		},
		"mockFiles" : {
			"description" : "Mocks files for creating metamodel",
			"params"	:[
				{
					"name" : "sServiceURL",
					"type" : "string",
					"description" : "the Service url. null if it needs to be mocked"
				},
				{
					"name" : "sMetadataContent",
					"type" : "string",
					"description" :  "The Metadata content to return by the mock"
				},
				{
					"name" : "aAnnotations",
					"type" : "[object]",
					"description" :  "Array of annotations files to be mocked"
				}
			]
		}
	}
}
