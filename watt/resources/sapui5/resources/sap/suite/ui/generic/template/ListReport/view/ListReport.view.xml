<core:View
		xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
		xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:smartlink="sap.ui.comp.navpopover"
		xmlns:smarttable="sap.ui.comp.smarttable" xmlns:smartfilterbar="sap.ui.comp.smartfilterbar"
		xmlns:table="sap.ui.table" xmlns:semantic="sap.m.semantic"
		xmlns:ushell="sap.ushell.ui"
        xmlns:build="sap.build"
		controllerName="sap.suite.ui.generic.template.ListReport.view.ListReport">
	<!--
		@classdesc
		@name: Name: sap.ui.generic.template.fragments.ListReport.view.xml
		@description:
			- This template creates a page containing a analytical or responsive table for entries of the given entity set
			- The attribute parameter>aggregationBinding can be used to set filter and expand options for the table
		@namespace {http://docs.oasis-open.org/odata/ns/edm} [edm]
		@param {edm.EntitySet} [entitySet]
		@param [parameter] {
			"aggregationBinding",
			"entitySet",
			"entityType",
			"sap-ui-debug"
		}-->

	<template:with path="entitySet>entityType" helper="sap.ui.model.odata.AnnotationHelper.gotoEntityType"
				   var="entityType">
		<semantic:FullscreenPage id="page" title="{i18n>PAGEHEADER}" showNavButton="true" navButtonPress="onBack"
			  busyIndicatorDelay="0" enableScrolling="true" class="sapSmartTemplatesListReportPageOverflow"
              build:metadata="#pattern:ListReport">
			<semantic:content>
				<VBox fitContainer="true">
					<smartfilterbar:SmartFilterBar id="listReportFilter" entityType="{parameter>/entityType}"
												   persistencyKey="searchListReportVariant"
												   enableBasicSearch="{= !(${entitySet>Org.OData.Capabilities.V1.SearchRestrictions/Searchable/Bool} === 'false') }"
												   initialise="onInitSmartFilterBar"
												   search="onSearchButtonPressed"
												   beforeVariantSave="onBeforeSFBVariantSave"
												   afterVariantLoad="onAfterSFBVariantLoad"
                                                   build:metadata="#pattern:FilterBar;staticProp:enableBasicSearch:AllowFreeSearch">
						<smartfilterbar:controlConfiguration>
							<template:repeat list="{entityType>com.sap.vocabularies.UI.v1.SelectionFields}"
											 var="selectionField">
								<smartfilterbar:ControlConfiguration key="{selectionField>PropertyPath}"
																	 visibleInAdvancedArea="true" groupId="_BASIC"
																	 index="{path: 'selectionField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getRepeatIndex'}"
                                                                     build:metadata="#pattern:Filter;staticProp:description:Description:{path:'selectionField>PropertyPath@@sap:label'};prop:key:FilterOn"/>
							</template:repeat>
							<!--template:if test="{parameter>/isDraftEnabled}">
								<smartfilterbar:ControlConfiguration key="DraftState" index="0" label="{i18n>EDITING_STATUS}" visibleInAdvancedArea="true" groupId="_BASIC">
									<smartfilterbar:customControl>
										<ComboBox> //deactivated until AI supports filtering by navigation properties
											<core:Item key="0" text="{i18n>ALL_OBJECTS}" />
											<core:Item key="1" text="{i18n>ACTIVE_VERSION}" />
											<core:Item key="2" text="{i18n>DRAFT_OBJECT}" />
											<core:Item key="3" text="{i18n>LOCKED_OBJECT}" />
											<core:Item key="4" text="{i18n>UNSAVED_CHANGES}" />
										</ComboBox>
									</smartfilterbar:customControl>
								</smartfilterbar:ControlConfiguration>
							</template:if -->
							<core:ExtensionPoint name="SmartFilterBarControlConfigurationExtension|{entitySet>name}"/> 
						</smartfilterbar:controlConfiguration>
						<smartfilterbar:customData>
							<core:CustomData key="defaultDropDownDisplayBehaviour" value="descriptionOnly"/>
							<core:CustomData key="defaultTokenDisplayBehaviour" value="idAndDescription"/>
							<core:CustomData key="dateFormatSettings" value='\{"UTC":true,"style":"short"\}'/>
						</smartfilterbar:customData>
						<smartfilterbar:layoutData>
							<FlexItemData shrinkFactor="0"/>
						</smartfilterbar:layoutData>
					</smartfilterbar:SmartFilterBar>
					<template:with path="meta>com.sap.vocabularies.UI.v1.HeaderInfo" var="header">
						<smarttable:SmartTable id="listReport" smartFilterId="listReportFilter"
											   persistencyKey="listReportFloorplanTable"
											   header="{path: 'header>TypeNamePlural', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
											   beforeRebindTable="onBeforeRebindTable"
											   dataReceived="onDataReceived"
											   useVariantManagement="{= !${parameter>/settings/hideTableVariantManagement}}"
											   afterVariantSave="onAfterTableVariantSave"
											   afterVariantApply="onAfterApplyTableVariant"
											   entitySet="{parameter>/entitySet}"
											   class="sapSmartTemplatesListReportSmartTable"
											   demandPopin="{= !(${entityType>sap:semantics} === 'aggregate') &amp;&amp; !(${parameter>/settings/gridTable} === true) ? 'true' : 'false'}"
											   useExportToExcel="true"
                                               build:metadata="#pattern:Table;staticProp:header:Title">
							<smarttable:customData>
								<core:CustomData key="enableInResultForLineItem" value="true"/>
								<core:CustomData key="dateFormatSettings" value='\{"UTC":true,"style":"short"\}'/>
								<template:with path="meta>com.sap.vocabularies.UI.v1.PresentationVariant" var="variant">
									<template:if test="{= ${variant>SortOrder}}">
										<core:CustomData key="TemplateSortOrder"
														 value="{path: 'variant>SortOrder', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getSortOrder'}"/>
									</template:if>
								</template:with>
							</smarttable:customData>
							<smarttable:layoutData>
								<FlexItemData growFactor="1"/>
							</smarttable:layoutData>
							<smarttable:semanticObjectController>
								<smartlink:SemanticObjectController beforePopoverOpens="onBeforePopoverOpens"
																	navigate="onPopoverLinkPressed"
																	prefetchNavigationTargets="true"/>
							</smarttable:semanticObjectController>
							<smarttable:customToolbar>
								<OverflowToolbar design="Transparent">
									<ToolbarSpacer/>
<!-- 									<core:ExtensionPoint name="ToolbarExtension" /> -->
									<template:repeat list="{meta>com.sap.vocabularies.UI.v1.LineItem}" var="dataField">
										<template:if test="{= ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForAction' || ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation'}"
                                                     build:metadata="#ignore">
											<template:with path="dataField>Action"
														   helper="sap.ui.model.odata.AnnotationHelper.gotoFunctionImport"
														   var="action">
												<Button id="action::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}"
														text="{path: 'dataField>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
														press="onCallAction" type="Transparent"
                                                        build:metadata="#pattern:ActionButton;staticProp:text:Label;staticProp::Importance:{dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember};condition:datafield>RecordType:com.sap.vocabularies.UI.v1.DataFieldForAction">
													<layoutData>
														<OverflowToolbarLayoutData moveToOverflow="{= !(${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/High')}"
																				   stayInOverflow="{= ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/Low'}"/>
													</layoutData>
													<customData>
														<core:CustomData key="Type" value="{dataField>RecordType}"/>
														<template:if test="{= ${dataField>SemanticObject}}">
															<core:CustomData key="SemanticObject"
																			 value="{path: 'dataField>SemanticObject', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"/>
														</template:if>
														<core:CustomData key="Action"
																		 value="{path: 'dataField>Action', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"/>
														<core:CustomData key="Label"
																		 value="{path: 'dataField>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"/>
													</customData>
												</Button>
											</template:with>
										</template:if>
									</template:repeat>
									<template:if test="{= ${entityType>sap:semantics} === 'aggregate' || ${parameter>/settings/gridTable}}">
										<Button id="showDetails"
												text="{i18n>NAVIGATE_TO_DETAIL}" press="onNavigateToDetail"
												visible="{admin>/HasDetail}" type="Transparent"/>
									</template:if>
									<template:if test="{= !(${entitySet>Org.OData.Capabilities.V1.InsertRestrictions/Insertable/Bool} === 'false') }">
										<Button id="addEntry"
												icon="sap-icon://add" tooltip="{i18n>CREATE_NEW_OBJECT}"
												press="addEntry" type="Transparent"/>
									</template:if>
								</OverflowToolbar>
							</smarttable:customToolbar>
							<template:if test="{= ${entityType>sap:semantics} === 'aggregate'}" build:metadata="#ignore">
								<template:then>
									<table:AnalyticalTable id="analyticalTable" visibleRowCountMode="Auto"
														   allowColumnReordering="true" showColumnVisibilityMenu="false"
														   expandFirstLevel="false" selectionMode="{= ${path: 'meta>com.sap.vocabularies.UI.v1.LineItem', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.hasActions'} ? 'Single' : 'None' }"
														   enableColumnFreeze="true" enableCellFilter="true">
<!-- 										<table:columns> -->
<!-- 											<core:ExtensionPoint name="AnalyticalTableColumnsExtension" /> -->
<!-- 										</table:columns> -->
									</table:AnalyticalTable>
								</template:then>
								<template:elseif test="{= ${parameter>/settings/gridTable}}" build:metadata="#ignore">
									<table:Table id="GridTable" visibleRowCountMode="Auto"
												 allowColumnReordering="true" showColumnVisibilityMenu="false"
												 selectionMode="{= ${path: 'meta>com.sap.vocabularies.UI.v1.LineItem', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.hasActions'} ? 'Single' : 'None' }"
												 enableColumnFreeze="true" enableCellFilter="true">
<!-- 										<table:columns> -->
<!-- 											<core:ExtensionPoint name="GridTableColumnsExtension" /> -->
<!-- 										</table:columns> -->
									</table:Table>
								</template:elseif>
								<template:else build:metadata="#ignore">
									<Table id="responsiveTable"
										   fixedLayout="false" growing="true" growingScrollToLoad="true"
										   growingThreshold="50"
										   mode="{= ${path: 'meta>com.sap.vocabularies.UI.v1.LineItem', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.hasActions'} ? 'SingleSelectLeft' : 'None' }">
										<template:with path="entitySet>" var="listEntitySet">
											<template:with path="meta>com.sap.vocabularies.UI.v1.LineItem"
														   var="collection">
												<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.TableColumns"
															   type="XML"/>
											</template:with>
										</template:with>
									</Table>
								</template:else>
							</template:if>
						</smarttable:SmartTable>
					</template:with>
				</VBox>
			</semantic:content>

		<!-- FOOTER -->

		<semantic:sendEmailAction>
			<semantic:SendEmailAction id="shareEmail" press="onShareEmailPress"/>
		</semantic:sendEmailAction>
		<semantic:shareInJamAction>
			<semantic:ShareInJamAction id="shareInJam" visible="{share>/isShareInJamActive}" press="onShareInJamPress"/>
		</semantic:shareInJamAction>
		<semantic:saveAsTileAction>
			<ushell:footerbar.AddBookmarkButton id="shareTile" title="{i18n>PAGEHEADER}" tileIcon="{share>/bookmarkIcon}"
			                                    customUrl="{share>/bookmarkCustomUrl}" serviceUrl="{share>/bookmarkServiceUrl}"/>
		</semantic:saveAsTileAction>

		<!-- END FOOTER -->

		</semantic:FullscreenPage>
	</template:with>

</core:View>
